version: "3.9"
name: oidc_provider


services:
  redis:
    image: redis:8.0-rc1-alpine3.21
    container_name: oidc_redis
    command: redis-server /usr/local/etc/redis/redis.conf
    environment:
      DEFAULT_PASS: $default_redis_pass
    expose:
      - "6379"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 20s
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$DEFAULT_PASS", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - redis_network

  pgadmin:
    image: dpage/pgadmin4:9.2.0
    container_name: oidc_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: oidc_admin@hsg.ru
      PGADMIN_DEFAULT_PASSWORD: $PGADMIN_PASSWORD
      PGADMIN_LISTEN_ADDRESS: 0.0.0.0
    ports:
      - target: 80
        published: 1024
        protocol: tcp
        host_ip: 127.0.0.1
        mode: host
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - external

  api:
    container_name: oidc_provider_api
    build:
      context: .
      dockerfile: api.Dockerfile
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        host_ip: 0.0.0.0
        mode: host
    environment:
      dev: False
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      REDIS_USER: $REDIS_USER
      REDIS_PASSWORD: $REDIS_PASSWORD
    read_only: true
    cap_drop:
      - ALL
    user: 416:416
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 60s
    healthcheck:
      test: [ "CMD", "curl", "-head", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - redis_network
      - external

networks:
  redis_network:
    internal: true
    enable_ipv6: false
  external:
    internal: false
    enable_ipv6: false

configs:
  api_config:
    file: ./configs/api_config.cfg